version: "3.8"

services:
  backend:
    build: ./backend
    container_name: api_server
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    depends_on:
      - ollama
      - chromadb
    networks:
      - my_network
    environment:
      - CHROMA_DB_SERVER_HOST=chromadb
      - CHROMA_DB_SERVER_PORT=8000
      - CHROMA_DB_COLLECTION_NAME=docs_collection
      - LLM_BASE_URL=http://ollama:11434
      - MODEL_NAME=${MODEL_NAME}
      - EMBEDDING_MODEL_NAME=${EMBEDDING_MODEL_NAME}
      - TEMPERATURE=${TEMPERATURE}
      - OPENAI_KEY=${OPENAI_KEY}

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "8080:8501"
    networks:
      - my_network
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    environment:
      - API_BASE_URL=http://api_server:5000
    
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: always
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    mem_limit: 8g  # Increase memory to 8GB
    mem_reservation: 8g  # Reserve at least 4GB
    deploy:
      resources:
        limits:
          memory: 8g
        reservations:
          memory: 8g
    networks:
      - my_network
    environment:
      - OLLAMA_NUM_THREADS=8  # Adjust CPU threading for better performance
    # entrypoint: >
    #   sh -c "ollama pull mistral"

  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  ollama_data: {} 
  chromadb_data: {}